@page "/Orders/View/{orderId}"

@inject IOrderService _orderService;
@inject IProductService _productService;
@inject AutoMapper.IMapper _mapper;

<h3>Order: @orderId</h3>

<hr />

@if (order == null)
{
    <LoadingPlaceholder />
}
else
{
    <form>

        <div class="row">

            <div class="col-12 col-lg-6">

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Customer</label>
                    <div class="col-sm-10 d-flex" style="align-items:center;">
                        <NavLink href=@("Customers/View/" + order.CustomerId)>
                            @order.Customer.CompanyName
                        </NavLink>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Employee</label>
                    <div class="col-sm-10 d-flex" style="align-items:center;">
                        @if (order.Employee != null)
                        {
                            <NavLink href=@("Employees/View/" + order.EmployeeId)>
                                @order.Employee.FullName
                            </NavLink>
                        }
                    </div>
                </div>

            </div>

            <div class="col-12 col-lg-6">

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Order Date</label>
                    <div class="col-sm-10">
                        <input type="text" readonly class="form-control-plaintext" value="@order.OrderDate.ToDate()" />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Required Date</label>
                    <div class="col-sm-10">
                        <input type="text" readonly class="form-control-plaintext" value="@order.RequiredDate.ToDate()" />
                    </div>
                </div>

            </div>
        </div>

        <hr />

        <h4>Shipping</h4>

        <div class="row">

            <div class="col-12 col-lg-6">

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Ship Via</label>
                    <div class="col-sm-10 d-flex" style="align-items:center;">
                        @if (order.Shipper != null)
                        {
                            <NavLink href=@("Shippers/View/" + order.ShipVia)>
                                @order.Shipper.CompanyName
                            </NavLink>
                        }
                    </div>
                </div>

            </div>

            <div class="col-12 col-lg-6">

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Shipped Date</label>
                    <div class="col-sm-10">
                        <input type="text" readonly class="form-control-plaintext" value="@order.ShippedDate.ToDate()" />
                    </div>
                </div>

            </div>

        </div>

        <div class="row">

            <div class="col-12 col-lg-6">

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Name</label>
                    <div class="col-sm-10">
                        <input type="text" readonly class="form-control-plaintext" value="@order.ShipName" />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Address</label>
                    <div class="col-sm-10">
                        <input type="text" readonly class="form-control-plaintext" value="@order.ShipAddress" />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">City</label>
                    <div class="col-sm-10">
                        <input type="text" readonly class="form-control-plaintext" value="@order.ShipCity" />
                    </div>
                </div>
            </div>

            <div class="col-12 col-lg-6">

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Region</label>
                    <div class="col-sm-10">
                        <input type="text" readonly class="form-control-plaintext" value="@order.ShipRegion" />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Post Code</label>
                    <div class="col-sm-10">
                        <input type="text" readonly class="form-control-plaintext" value="@order.ShipPostalCode" />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Country</label>
                    <div class="col-sm-10">
                        <input type="text" readonly class="form-control-plaintext" value="@order.ShipCountry" />
                    </div>
                </div>
            </div>

        </div>

        <hr />

        <h4>Line Items</h4>

        <div class="row">

            <div class="col">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Qty</th>
                            <th>Unit Price</th>
                            <th>Discount</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var line in order.OrderDetails)
                        {
                            <tr>
                                <td>
                                    <NavLink href="@("Products/View/" + line.ProductId)">
                                        @GetProductName(line.ProductId)
                                    </NavLink>
                                </td>
                                <td>@line.Quantity</td>
                                <td>@line.UnitPrice.Round()</td>
                                <td>@line.DiscountPercent.Round()</td>
                                <td>@line.Total.Round()</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </form>
}

@code {

    [Parameter]
    public string orderId { get; set; }

    private OrderViewModel order;
    private IEnumerable<ProductViewModel> products;

    protected override async Task OnInitializedAsync()
    {
        var orderModel = await _orderService.GetByIdAsync(int.Parse(orderId));

        order = _mapper.Map<OrderViewModel>(orderModel);

        var productIds = order.OrderDetails.Select(x => x.ProductId);

        var productModels = await _productService.GetAll().Where(p => productIds.Contains(p.ProductId)).ToListAsync();

        products = _mapper.Map<IEnumerable<ProductViewModel>>(productModels);
    }

    private string GetProductName(int id)
    {
        return products.First(p => p.ProductId == id).ProductName;
    }
}
